<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Portswigger</title>
        <link>https://portswigger.net/daily-swig</link>
        <description>Portswigger</description>
        <lastBuildDate>Wed, 14 Jul 2021 20:05:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>awesome</generator>
        <language>en</language>
        <image>
            <title>Portswigger</title>
            <url>https://remyhax.xyz/image/profile.jpg</url>
            <link>https://portswigger.net/daily-swig</link>
        </image>
        <copyright>DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE</copyright>
        <item>
            <title><![CDATA[SolarWinds issues fix for RCE vulnerability in Serv-U products amid ‘targeted’ attacks | The Daily Swig]]></title>
            <link>https://portswigger.net/daily-swig/solarwinds-issues-fix-for-rce-vulnerability-in-serv-u-products-amid-targeted-attacks</link>
            <guid>https://portswigger.net/daily-swig/solarwinds-issues-fix-for-rce-vulnerability-in-serv-u-products-amid-targeted-attacks</guid>
            <pubDate>Wed, 14 Jul 2021 19:57:39 GMT</pubDate>
            <content:encoded><![CDATA[SolarWinds issues fix for RCE vulnerability in Serv-U products amid ‘targeted’ attacks
Adam Bannister 13 July 2021 at 12:24 UTC
Updated: 13 July 2021 at 14:08 UTC
Cyber-attacks RCE Enterprise

Enterprise IT software vendor unsure of scope of impact




UPDATED SolarWinds has patched a remote code execution (RCE) vulnerability in its Serv-U file transfer products after Microsoft observed exploitation against “a limited, targeted set of customers” by “a single threat actor”.

The remote memory escape flaw (CVE-2021-35211) affects both the Serv-U Managed File Transfer Server and Serv-U Secured File Transfer Protocol, according to a security advisory issued by SolarWinds.

“A threat actor who successfully exploited this vulnerability could run arbitrary code with privileges,” said SolarWinds. “An attacker could then install programs; view, change, or delete data; or run programs on the affected system.”




Catch up on the latest cyber-attack news and analysis




Having been alerted to the flaw and hostile exploitation by Microsoft, SolarWinds said it “mobilized to address it quickly”, issuing a hotfix on July 9.

The enterprise IT software vendor said it doesn’t yet “have an estimate of how many customers may be directly affected by the vulnerability”, or the identity of any potentially affected customers.

SolarWinds said the flaw “is completely unrelated to the Sunburst supply chain attack” that unfolded at the tail end of 2020, in which nation-state attackers compromised SolarWinds clients such as Microsoft, FireEye, and US government agencies via vulnerabilities in SolarWinds’ Orion software.

A SolarWinds spokesperson told The Daily Swig: “Microsoft has detected a limited amount of activity associated with this issue. Regardless, we quickly released a patch to help ensure the protection of customer environments.

“It's important to note that this is a software vulnerability like those commonly seen in all software vendors. It is not a new cyberattack.”

Indicators of compromise

The vulnerability exists in all Serv-U versions up to and including 15.2.3 HF1, and has been addressed in Serv-U 15.2.3 HF2.

“We recommend all customers using Serv-U install this fix immediately for the protection of your environment,” said SolarWinds.




RECOMMENDED Eight arrests made as Eurojust dismantles €2 million e-commerce fraud operation




SolarWinds has confirmed that no other SolarWinds or N-able (formerly SolarWinds MSP) products are affected by the flaw.

The company has warned Serv-U customers that the throwing of exceptions within their environment could be a sign of compromise – although there are other potential causes – because exploitation takes the form of Return Oriented Programming (ROP) attacks.

Another potential indicator of compromise is “potentially suspicious connections via SSH”.

Customers are safe from attacks exploiting the vulnerability when SSH is disabled, added SolarWinds.

The company also said that “additional details of the vulnerability will be published after giving customers sufficient time to upgrade for the protection of their environments”.




This article was updated on July 13 with the addition of comments from SolarWinds.




DON’T FORGET TO READ Research exposes vulnerabilities in IP camera firmware used by multiple vendors

Cyber-attacks RCE Enterprise Microsoft Vulnerabilities Cybercrime Hacking News Network Security Zero-day Organizations

Adam Bannister

@Ad_Nauseum74

Latest Posts
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
Open source web container now patched against six-year-old bug
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
DevSecAI
GitHub Copilot prone to writing security flaws
Related stories
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
14 July 2021
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
14 July 2021
DevSecAI
GitHub Copilot prone to writing security flaws
14 July 2021
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
14 July 2021

Burp Suite

Web vulnerability scanner
Burp Suite Editions
Release Notes
 

Vulnerabilities

Cross-site scripting (XSS)
SQL injection
Cross-site request forgery
XML external entity injection
Directory traversal
Server-side request forgery
 

Customers

Organizations
Testers
Developers
 

Company

About
PortSwigger News
Careers
Contact
Legal
Privacy Notice
 

Insights

Web Security Academy
Blog
Research
The Daily Swig
 
Follow us

© 2021 PortSwigger Ltd.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Firefox becomes latest browser to support Fetch Metadata request headers | The Daily Swig]]></title>
            <link>https://portswigger.net/daily-swig/firefox-becomes-latest-browser-to-support-fetch-metadata-request-headers</link>
            <guid>https://portswigger.net/daily-swig/firefox-becomes-latest-browser-to-support-fetch-metadata-request-headers</guid>
            <pubDate>Wed, 14 Jul 2021 19:57:37 GMT</pubDate>
            <content:encoded><![CDATA[Firefox becomes latest browser to support Fetch Metadata request headers
Jessica Haworth 13 July 2021 at 13:55 UTC
Updated: 13 July 2021 at 13:59 UTC
Browsers firefox Secure Development

Extra layer of security helps protect against CSRF and XS-Leak attacks

Firefox now supports Fetch Metadata request headers, Mozilla has announced, further protecting users from a number of high-impact web attacks.

The new version of the popular browser, which was made available to all users today, is the latest to include the Google-developed privacy feature.

In total, Firefox 90 will feature four different headers – Dest, Mode, Site, and User – which together allow web applications to protect users against various cross-origin threats, including cross-site request forgery (CSRF), cross-site leaks (XS-Leaks), and Spectre-style side-channel attacks.

A blog post released today (July 13) contains more information about Mozilla’s implementation of the technology.

Timeline

Fetch Metadata request headers were introduced in Chrome 76, which was released in July 2019.




INSIGHT What is Fetch Metadata? How to protect your web resources from information-stealing attacks




The headers provide web servers with extra security information that can help determine whether to block or allow requests.

They also allow a user to deploy a Resource Isolation Policy, a strong defense-in-depth mechanism.

This not only helps protect users from the potentially harmful attacks listed above, but can also help web servers to differentiate between cross-site and same-origin requests.




Read more of the latest browser security news




Fetch Metadata request headers are already available for Edge and Opera, which are also based on the open source Chromium framework.

To find out more about how Fetch Metadata request headers work, check out this interview with Lukas Weichselbaum, staff information security engineer at Google, who spoke to The Daily Swig about the technology.




DON’T FORGET TO READ Google checks rise of DOM XSS with Trusted Types

Browsers firefox Secure Development Chrome Mozilla Google DevSecOps CSRF Vulnerabilities Industry News Edge XS-Leak Privacy

Jessica Haworth

@JesscaHaworth

Latest Posts
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
Open source web container now patched against six-year-old bug
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
DevSecAI
GitHub Copilot prone to writing security flaws
Related stories
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
14 July 2021
DevSecAI
GitHub Copilot prone to writing security flaws
14 July 2021
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
14 July 2021
Roll the dice
Encryption issues account for minority of flaws in encryption libraries
13 July 2021

Burp Suite

Web vulnerability scanner
Burp Suite Editions
Release Notes
 

Vulnerabilities

Cross-site scripting (XSS)
SQL injection
Cross-site request forgery
XML external entity injection
Directory traversal
Server-side request forgery
 

Customers

Organizations
Testers
Developers
 

Company

About
PortSwigger News
Careers
Contact
Legal
Privacy Notice
 

Insights

Web Security Academy
Blog
Research
The Daily Swig
 
Follow us

© 2021 PortSwigger Ltd.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Encryption issues account for minority of flaws in encryption libraries – research | The Daily Swig]]></title>
            <link>https://portswigger.net/daily-swig/encryption-issues-account-for-minority-of-flaws-in-encryption-libraries-research</link>
            <guid>https://portswigger.net/daily-swig/encryption-issues-account-for-minority-of-flaws-in-encryption-libraries-research</guid>
            <pubDate>Wed, 14 Jul 2021 19:57:36 GMT</pubDate>
            <content:encoded><![CDATA[Encryption issues account for minority of flaws in encryption libraries – research
John Leyden 13 July 2021 at 16:15 UTC
Updated: 14 July 2021 at 16:21 UTC
Encryption Network Security Vulnerabilities

‘Complexity is an even worse enemy of security in cryptographic software’

An analysis of cryptographic libraries and the vulnerabilities affecting them has concluded that memory handling issues give rise to more vulnerabilities than encryption implementation errors.

The study by academics at Massachusetts Institute of Technology (MIT) involved an examination of eight widely used cryptographic libraries using a combination of sources, including data from the National Vulnerability Database, individual project repositories, and mailing lists, among other sources.

Vulnerabilities in any of these widely used crypto libraries puts portions of web traffic and e-commerce transactions in danger, but the study concluded that coding rigour in the development of encryption technologies compares poorly with comparably complex mainstream software.

For example, a flaw in the widely used OpenSSL library in 2014 gave rise to the infamous Heartbleed vulnerability.

Roll the dice

The study, entitled ‘You Really Shouldn’t Roll Your Own Crypto: An Empirical Study of Vulnerabilities in Cryptographic Libraries’, by researchers Jenny Blessing, Michael Specter, and Daniel Weitzner, found “evidence of a strong correlation between the complexity of these libraries and their (in)security, empirically demonstrating the potential risks of bloated cryptographic codebases.”

Only 27.2% of vulnerabilities in cryptographic libraries are cryptographic issues compared to 37.2% of vulnerabilities that are rooted in memory safety issues.




Catch up with the latest encryption-related news and analysis




Non-cryptographic source code generally has a lower density of CVEs introduced compared to cryptographic libraries, the researchers found.

“Our findings suggest that cryptographic source code is indeed more brittle and prone to producing security bugs than a comparable amount of source code in a web browser or operating system,” the researchers conclude.

“The empirical data leads us to conclude that complexity is an even worse enemy of security in cryptographic software than in non-cryptographic software.”

Speaking the same language

The researchers call for a systems-based approach to cryptographic software, as well as emphasizing the dangers of “rolling your own crypto” – meaning that software developers should rely on established libraries and tools instead of developing their own.

The paper provoked a debate on the merits of different coding languages for cryptographic libraires on Twitter, in which a move away from C and C++ towards memory safe programming languages such Rust was advocated.

Open source isn’t really the answer because even in open source code, such as OpenSSL, errors like Heartbleed can go undetected for years.

Professor Alan Woodward, a computer scientist at the University of Surrey, told The Daily Swig: “Languages such as C/C++ are complex to write in and even though modern compilers and tool sets provide some safeguards against memory issues, they continue.

“As an empirical study it’s quite useful as a means of showing anyone that wishes to roll their own that they should get a real expert in both cryptography and the languages they are using to check to ensure they haven’t made a choice or used a construction that will render the cryptography insecure.”




YOU MAY ALSO LIKE Microsoft paid out $14m in bug bounty rewards in the last 12 months - report

Encryption Network Security Vulnerabilities Hacking News Open Source Software OSINT E-Commerce Database Security Cloud Security Internet Infrastructure Secure Development DevOps DevSecOps Industry News Research java JavaScript Python PHP Node.js Authentication IoT

John Leyden

@jleyden

Latest Posts
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
Open source web container now patched against six-year-old bug
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
DevSecAI
GitHub Copilot prone to writing security flaws
Related stories
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
14 July 2021
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
14 July 2021
DevSecAI
GitHub Copilot prone to writing security flaws
14 July 2021
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
14 July 2021

Burp Suite

Web vulnerability scanner
Burp Suite Editions
Release Notes
 

Vulnerabilities

Cross-site scripting (XSS)
SQL injection
Cross-site request forgery
XML external entity injection
Directory traversal
Server-side request forgery
 

Customers

Organizations
Testers
Developers
 

Company

About
PortSwigger News
Careers
Contact
Legal
Privacy Notice
 

Insights

Web Security Academy
Blog
Research
The Daily Swig
 
Follow us

© 2021 PortSwigger Ltd.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Critical vulnerabilities in open source text editor Etherpad could lead to remote takeover | The Daily Swig]]></title>
            <link>https://portswigger.net/daily-swig/critical-vulnerabilities-in-open-source-text-editor-etherpad-could-lead-to-remote-takeover</link>
            <guid>https://portswigger.net/daily-swig/critical-vulnerabilities-in-open-source-text-editor-etherpad-could-lead-to-remote-takeover</guid>
            <pubDate>Wed, 14 Jul 2021 19:57:35 GMT</pubDate>
            <content:encoded><![CDATA[Critical vulnerabilities in open source text editor Etherpad could lead to remote takeover
Jessica Haworth 14 July 2021 at 09:38 UTC
Updated: 14 July 2021 at 10:01 UTC
Vulnerabilities Open Source Software XSS

XSS bug in open source program has now been patched, though second flaw remains




Security vulnerabilities in online text editor Etherpad could allow attackers to remotely compromise a victim’s server and steal sensitive information, new research reveals.

A cross-site scripting flaw (XSS) enabled attackers to create a malicious shared document, or ‘pad’, that executes attacker-controlled code in the victim’s browser, allowing assailants to read, create, or modify data.

A second vulnerability, an argument injection bug, allowed attackers with administrative access to execute arbitrary code on the server by installing plugins from a URL that’s under their control.




Read more of the latest news about security vulnerabilities


Both vulnerabilities (CVE-2021-34817 and CVE-2021-34816), which were classed as ‘critical’, could be combined by attackers to compromise a server remotely.

The XSS vulnerability has been fixed in Etherpad version 1.8.14. The argument injection vulnerability is still apparently unpatched, but the researchers who discovered the flaw said it is “significantly harder” to exploit on its own.

Double trouble?

The security issues were discovered by Paul Gerste, vulnerability researcher at SonarSource, a Switzerland-based developer of DevSecOps tools.

A blog post released last night (July 13) states that Etherpad has more 250 plugins available and features a version history as well as a chat functionality.

It is particularly popular within the open source community and has been bookmarked more than 10,000 times by users.

Gerste told The Daily Swig that while the vulnerabilities are serious when chained, there are limitations to their exploitation.




DON’T MISS WAF bypass: ‘Severe’ OWASP ModSecurity Core Rule Set bug was present for several years


“Instances with default configuration are vulnerable,” Gerste said. “The attacker needs to be able to import a pad, so if the Etherpad instance is publicly accessible and pad creation is not restricted, then it is vulnerable.”

He added: “Attackers that already have access to a pad could elevate their privileges by targeting other users.”

Regarding the argument injection vulnerability, this can only be exploited if an admin account exists, which is not the case in a default configuration.

Therefore, an attacker can abuse the vulnerability if they compromise an administrator’s account – which can be achieved either via exploitation of the XSS vulnerability “or by other means”.

One patched, one to go

Gerste said that the maintainers of the project were quick to respond to his report and “took the matter seriously”, although they have only fixed one of the issues so far.

“The fix for the XSS vulnerability was patched two days later,” he explained.

“The argument injection was not easily fixable because of the way Etherpad’s plugin system works.

“Since people can publish plugins via NPM, attackers could always find a way to introduce malicious code, so admins should always be careful which plugins they install.”


YOU MAY ALSO LIKE Firefox becomes latest browser to support Fetch Metadata request headers

Vulnerabilities Open Source Software XSS Secure Development DevOps DevSecOps GitHub Industry News Research Switzerland Europe Data Breach Data Leak JavaScript Hacking News Zero-day Privacy

Jessica Haworth

@JesscaHaworth

Latest Posts
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
Open source web container now patched against six-year-old bug
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
DevSecAI
GitHub Copilot prone to writing security flaws
Related stories
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
14 July 2021
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
14 July 2021
DevSecAI
GitHub Copilot prone to writing security flaws
14 July 2021
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
14 July 2021

Burp Suite

Web vulnerability scanner
Burp Suite Editions
Release Notes
 

Vulnerabilities

Cross-site scripting (XSS)
SQL injection
Cross-site request forgery
XML external entity injection
Directory traversal
Server-side request forgery
 

Customers

Organizations
Testers
Developers
 

Company

About
PortSwigger News
Careers
Contact
Legal
Privacy Notice
 

Insights

Web Security Academy
Blog
Research
The Daily Swig
 
Follow us

© 2021 PortSwigger Ltd.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[DevSecAI: GitHub Copilot prone to writing security flaws | The Daily Swig]]></title>
            <link>https://portswigger.net/daily-swig/devsecai-github-copilot-prone-to-writing-security-flaws</link>
            <guid>https://portswigger.net/daily-swig/devsecai-github-copilot-prone-to-writing-security-flaws</guid>
            <pubDate>Wed, 14 Jul 2021 19:57:34 GMT</pubDate>
            <content:encoded><![CDATA[DevSecAI: GitHub Copilot prone to writing security flaws
Adam Bannister 14 July 2021 at 13:49 UTC
Updated: 14 July 2021 at 14:12 UTC
AI DevSecOps Research

AI pair programmer should be supervised like a toddler, says researcher

“How risky is it to allow an AI to write some, or all of your code?”

Far too risky without rigorous oversight, concludes security researcher ‘0xabad1dea’ after documenting a trio of security vulnerabilities generated by AI pair programmer GitHub Copilot during a risk assessment.

GitHub Copilot is designed to accelerate software development by suggesting entire lines and functions, adapting to developers’ coding style as it does so.

Trained on billions of lines of code publicly available on GitHub, the machine learning tool is currently in a trial phase and available for testing as a Visual Studio Code extension.

‘Reasonable at first glance’

0xabad1dea says Copilot sometimes generates code that is “so obviously, trivially wrong that no professional programmer could think otherwise”.

More alarmingly still, it also suggests “bad code that looks reasonable at first glance, something that might slip by a programmer in a hurry, or seem correct to a less experienced coder”.

GitHub admits that “the code it suggests may not always work, or even make sense”, but adds that “it’s getting smarter all the time”.




RECOMMENDED Encryption issues account for minority of flaws in encryption libraries – research




Central to these improvements will be ongoing optimization of a sliding ‘temperature’ scale between conservatism (mimicking the most common inputs) and originality, which makes output “less structured” and more prone to “gibberish”, says 0xabad1dea.

This ‘generative model’ reduces duplication between users but “is at odds with one of the most basic principles of reliability: determinism”, says 0xabad1dea.

She demonstrates this with differing implementations of a moon phase calculator generated from identical inputs.

The researcher also notes that Copilot is currently “unreliable” at generating comments and offers variables with “useless names”, potentially making outputs “utterly inscrutable”.

Security flaws

When she fed Copilot with general purpose HTML parser with regex – an ill-advised input, she says – Copilot “declined to use regex and wrote a complete C function and a decent main() to drive it”.

Alarmingly, however, “if the parsed string contains no >, the parser will run off the end of the buffer and crash”, among other parsing issues.

There was at least qualified praise for the presence of “a surprising amount of delicate pointer math”, and for Copilot being “80% of the way to something that could conceivably be considered a basic parser”.

The AI tool also “blundered right into the most classic security flaw of the early 2000s: a PHP script taking a raw GET variable and interpolating it into a string to be used as an SQL query, causing SQL injection”, says 0xabad1dea. “Now PHP’s notorious propensity for security issues is infecting even non-human life.




Read more of the latest machine learning security news and analysis




“Furthermore, when prompted with shell_exec(), Copilot was happy to pass raw GET variables to the command line.”

Prompted “for a basic listening socket”, Copilot also created “a basic off-by-one buffer error” in the listening function.

The researcher was unable to verify whether Copilot excludes secret information such as API keys and passwords from its training model.

“The most realistic risk here is a naive programmer accepting an autocomplete for a cryptographic key which sets it to be a random-looking but dangerously low-entropy value,” she said.

‘Neural network see, neural network do’

“The inevitable conclusion is that Copilot can and will write security vulnerabilities on a regular basis, especially in memory-unsafe languages,” says the researcher.

While Copilot excels at generating boilerplate that may “bog down” programmers and accurately guesses constants and setup functions, it’s less adroit at handling application logic, she says.

“Copilot cannot always maintain sufficient context to write correct code across many lines”, 0xabad1dea explains, while there’s no apparent “systematic separation of professionally produced code” from the profusion of “buggy code on GitHub”.

She added: “Neural network see, neural network do”.

Supervising a toddler

0xabad1dea tells The Daily Swig that she expects GitHub to be diligent in addressing Copilot’s shortcomings, but that developers should “be realistic about the limitations”.

She likens the Copilot model to a toddler. “They will impress you with how much they have learned, but they will still always lack context and experience. And of course, they shouldn’t be left unsupervised.”

0xabad1dea also notes that a below-the-line commenter flagged a “tiny flaw” in an Easter date calculator she generated through Copilot.

“So even when I was on the lookout, I missed something. Of course this can happen with human-written code as well, but the fact that we have so much trouble just means we don’t need our tools introducing new random faults.”

The Daily Swig invited GitHub to comment on the findings but we have yet to hear back. We will update the story if we do.




YOU MIGHT ALSO LIKE Critical vulnerabilities in open source text editor Etherpad could lead to remote takeover

AI DevSecOps Research Machine Learning DevOps Secure Development Privacy Open Source Software Hacking News Hacking Techniques Vulnerabilities SQL Injection PHP Organizations Industry News

Adam Bannister

@Ad_Nauseum74

Latest Posts
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
Open source web container now patched against six-year-old bug
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
Related stories
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
14 July 2021
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
14 July 2021
DevSecAI
GitHub Copilot prone to writing security flaws
14 July 2021
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
14 July 2021

Burp Suite

Web vulnerability scanner
Burp Suite Editions
Release Notes
 

Vulnerabilities

Cross-site scripting (XSS)
SQL injection
Cross-site request forgery
XML external entity injection
Directory traversal
Server-side request forgery
 

Customers

Organizations
Testers
Developers
 

Company

About
PortSwigger News
Careers
Contact
Legal
Privacy Notice
 

Insights

Web Security Academy
Blog
Research
The Daily Swig
 
Follow us

© 2021 PortSwigger Ltd.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[REvil infrastructure disappearance sparks speculation about fate of infamous ransomware slingers | The Daily Swig]]></title>
            <link>https://portswigger.net/daily-swig/revil-infrastructure-disappearance-sparks-speculation-about-fate-of-infamous-ransomware-slingers</link>
            <guid>https://portswigger.net/daily-swig/revil-infrastructure-disappearance-sparks-speculation-about-fate-of-infamous-ransomware-slingers</guid>
            <pubDate>Wed, 14 Jul 2021 19:57:32 GMT</pubDate>
            <content:encoded><![CDATA[REvil infrastructure disappearance sparks speculation about fate of infamous ransomware slingers
John Leyden 14 July 2021 at 16:09 UTC
Updated: 14 July 2021 at 16:22 UTC
Cybercrime Ransomware Malware

Resident REvil

Websites associated with REvil – the infamous ransomware group blamed for attacks on Kaseya, Travelex, and meat supplier JBS – have dropped offline, sparking feverish speculation in the process.

Payment and data leak sites on the dark web associated with REvil became unreachable on Wednesday (July 13). The “outage” continued into Thursday.




RELATED REvil ransomware attackers demand $70m following Kaseya VSA supply chain attack




Ransomware groups periodically disappear, only to reinvent themselves under new branding.

Other possibilities include interdiction by law enforcement – US authorities have shown themselves more willing to actively dismantle cybercrime infrastructure of late – or even interference from rival cybercrime gangs.

Laying low?

The Sodinokibi ransomware, widely attributed to the REvil gang and distributed by affiliates through a Ransomware-as-a-Service (RaaS) business model, has been a scourge of corporate security over the last two years or more.

The group’s malware-fuelled cybercrime activity has intensified of late with the Kaseya supply chain attack, and it could be that the REvil crew have stepped back in order to allow things to cool off.




BACKGROUND What is Sodinokibi? The ransomware behind the Travelex attack




The success of REvil in making millions of dollars means that a return in some form is perhaps the most likely scenario.

Oleg Skulkin, a lead digital forensics analyst at security firm Group-IB, commented:

REvil have either decided to shut down their infrastructure themselves to then start from scratch and continue working under a new name with updated tools (as it is was the case with Ako ransomware that then evolved to Ranzy) or, in another scenario, REvil infrastructure might have gone down as a result of a law enforcement operation.

Police action

REvil’s accounts on hacker forums have been blocked by the administration, according to Group-IB, as a precaution against law enforcement action on the forum. This disavowal suggests the denizens of the dark web think the authorities might have intervened.

“The possible police action against REvil isn’t likely to become a big problem for their affiliates since the latter jump from one ransomware-as-a-service program to another, or even work with multiple RaaS [suppliers] at the same time,” Skulkin explaine




Catch up on the latest ransomware-related news and analysis




Vladimir Kuskov, head of threat exploration at antivirus vendor Kaspersky, added that known REvil representatives have been banned from a darknet cybercrime forum.

“Resources related to REvil, which included a blog with information about their attacks, as well as payment sites, went offline,” Kuskov said.

“A representative of this group was also banned from a popular darknet forum where participants of this criminal industry communicate.”

The security pro added: “Why the websites went down is not yet clear, however, circumstances suggest that REvil might stop its operations, following the path DarkSide, Avaddon, and Babuk took.”

Political pressure

REvil is a Russian-speaking RaaS operation that’s thought to be based in Russia. The group avoids targeting Russian institutions via system language detection that’s built into the malware code.

The US has threatened retaliation against Russia in the wake of the Kaseya attack and this could be a factor in the shutdown.

“My guess is that it was political pressure, from the US to Russia and Russia to them,” according to BlackBerry threat researcher Eric Milam, who has previous done extensive research into the threat actors.

Milam told The Daily Swig: “When the spotlight is on a criminal group, they may choose to step away for a while.

“They often use this time to make a ‘better product’ and come back later. This is not unlike companies that start to get a bad reputation, they tend to rebrand themselves and come back as something ‘different’, even if it’s just their name.”

Some evidence suggests that REvil sprang from the ashes of GandCrab, an earlier and now defunct ransomware operation.

Milam and his colleagues are well placed to attribute further attacks to those behind REvil, should the gang return.

“Our team would focus mainly on the hard evidence of any new variants,” Miam explained. “That would include things like fingerprinting the file/code, the modes of operation, location of attacks, etc. Most attackers won’t really change their core techniques.”




Additional reporting by Jessica Haworth




YOU MIGHT LIKE Research exposes vulnerabilities in IP camera firmware used by multiple vendors

Cybercrime Ransomware Malware Russia Hacking News Hacking Techniques Dark Web Fraud Analysis Cyber-attacks Network Security Database Security Cloud Security Email Security Social Engineering Phishing Supply Chain Attacks Organizations Enterprise Cyber Warfare Data Leak Data Breach Hacking Tools US North America

John Leyden

@jleyden

Latest Posts
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
Open source web container now patched against six-year-old bug
DevSecAI
GitHub Copilot prone to writing security flaws
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
Related stories
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
14 July 2021
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
14 July 2021
DevSecAI
GitHub Copilot prone to writing security flaws
14 July 2021
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
14 July 2021

Burp Suite

Web vulnerability scanner
Burp Suite Editions
Release Notes
 

Vulnerabilities

Cross-site scripting (XSS)
SQL injection
Cross-site request forgery
XML external entity injection
Directory traversal
Server-side request forgery
 

Customers

Organizations
Testers
Developers
 

Company

About
PortSwigger News
Careers
Contact
Legal
Privacy Notice
 

Insights

Web Security Academy
Blog
Research
The Daily Swig
 
Follow us

© 2021 PortSwigger Ltd.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[HTTP request smuggling vulnerability in Apache Tomcat ‘has been present since 2015’ | The Daily Swig]]></title>
            <link>https://portswigger.net/daily-swig/http-request-smuggling-vulnerability-in-apache-tomcat-has-been-present-since-2015</link>
            <guid>https://portswigger.net/daily-swig/http-request-smuggling-vulnerability-in-apache-tomcat-has-been-present-since-2015</guid>
            <pubDate>Wed, 14 Jul 2021 19:57:31 GMT</pubDate>
            <content:encoded><![CDATA[HTTP request smuggling vulnerability in Apache Tomcat ‘has been present since 2015’
Jessica Haworth 14 July 2021 at 16:52 UTC
Vulnerabilities Open Source Software java

Open source web container now patched against six-year-old bug

A HTTP request smuggling vulnerability in Apache Tomcat has been present “since at least 2015”, the project maintainers have warned.

Apache Tomcat is an open source Java servlet container which is maintained by the Apache Software Foundation.

In release notes posted online (insecure link), maintainers of Tomcat revealed that the vulnerability was discovered in multiple versions of the software.

“Apache Tomcat did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy,” it reads.

“Specifically: Tomcat incorrectly ignored the transfer-encoding header if the client declared it would only accept an HTTP/1.0 response; Tomcat honoured the identify encoding; and Tomcat did not ensure that, if present, the chunked encoding was the final encoding.”




Read more of the latest security vulnerability news




Mark Thomas, member of the Apache Tomcat Project Management Committee, told The Daily Swig that the vulnerability “has been present in the Tomcat codebase since at
least 2015”.

“It may have been present before that, but that is earliest release of the current supported versions,” Thomas said, but added that the committee – which is entirely staffed by volunteers – doesn’t check older, unsupported versions.

Tomcat server patch

HTTP request smuggling is a hacking technique that can be used to interfere with the way a website processes sequences of HTTP requests that are received from one or more users.

Request smuggling vulnerabilities are often critical and can allow an attacker to bypass security controls, gain unauthorized access to sensitive data, and directly compromise other application users.

The vulnerability was reported to the Apache Software Foundation by researchers Bahruz Jabiyev, Steven Sprecher, and Kaan Onarlioglu of NEU SecLab, Northeastern University in Boston, Massachusetts.

It has yet to be assigned a CVSS score. However, Tomcat security team rated it as ‘important’ on a scale of ‘low, moderate, important, or critical’.




READ MORE HTTP request smuggling: HTTP/2 opens a new attack tunnel




The vulnerability was reported “responsibly”, Thomas said, on May 7, 2021. “We had a patch (actually, a series of three patches) agreed privately by May 11,” Thomas told The Daily Swig.

Those patches were made public on Jun 8, although the public announcement was delayed until July 12, since certain versions contained a significant regression in JSP processing, Thomas said.

Users of the affected versions should update to Apache Tomcat 10.0.7 or later, 9.0.48 or later, or 8.5.68 or later. The issue was fixed in 9.0.47 and 8.5.67 “but the release votes for those versions did not pass”, said Thomas.




YOU MAY ALSO LIKE ‘Being serious about security is a must’ – Apache Software Foundation custodians on fulfilling its founding mission

Vulnerabilities Open Source Software java Secure Development Hacking News Hacking Techniques Research Industry News

Jessica Haworth

@JesscaHaworth

Latest Posts
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
DevSecAI
GitHub Copilot prone to writing security flaws
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
Related stories
Apache Tomcat devs alerted to six-year-old HTTP request smuggling bug
14 July 2021
REvil disappearance
Speculation is rife over fate of infamous ransomware slingers
14 July 2021
DevSecAI
GitHub Copilot prone to writing security flaws
14 July 2021
Overwritten
Vulnerabilities in open source text editor Etherpad could lead to takeover
14 July 2021

Burp Suite

Web vulnerability scanner
Burp Suite Editions
Release Notes
 

Vulnerabilities

Cross-site scripting (XSS)
SQL injection
Cross-site request forgery
XML external entity injection
Directory traversal
Server-side request forgery
 

Customers

Organizations
Testers
Developers
 

Company

About
PortSwigger News
Careers
Contact
Legal
Privacy Notice
 

Insights

Web Security Academy
Blog
Research
The Daily Swig
 
Follow us

© 2021 PortSwigger Ltd.]]></content:encoded>
        </item>
    </channel>
</rss>